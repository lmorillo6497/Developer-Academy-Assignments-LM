import numpy as np

# coordinates of player's starting position
player_location = np.array([1,1])


# changes to player's position according to their movements
a_step_left = np.array([-1,0])

d_step_right = np.array([1,0])

w_step_up = np.array([0,1])

s_step_down = np.array([0,-1])



# the map coordinates

# door_1to2 = [1,1]
# door_2to3 = [2,3]
# door_3to4 = [3,2]
# door_escape = [3,0]
# door_locations = (door_1to2, door_2to3, door_3to4, door_escape)

# room_1_coord = [1,1]
# room_2_coord = [1,3]
# room_3_coord = [3,3]
# room_4_coord = [3,1]
# path_through_rooms = (room_1_coord,room_2_coord,room_3_coord)


# all other coordinates are either walls, or beyond walls and thus inaccessible


print("You've made it this far! The beast is still chasing you, but it's getting tired and you're nearly free.\nFind your way through this last stretch of the labrinth and make your escape")


while True:
    player_movement = input("move around! press w to move up, a to move left, s to move down, and d to move right, or press q to quit").lower()

    match player_movement:

        case "a" :
            new_player_location = player_location + a_step_left
            print(new_player_location)

        case "d" :
            new_player_location = player_location + d_step_right
            print(new_player_location)

        case "w" :
            new_player_location = player_location + w_step_up
            print(new_player_location)

        case "s":
            new_player_location = player_location + s_step_down
            print(new_player_location)

        case "q":
            print("game over!")
            break

        case _:
            print("use w, a, s, or d to move around")
            continue


    match new_player_location.tolist():
    # NB MAP - external walls at x=0 and x=4, and y=4; internal wall at (2,1)

        case [1,0]:
            #player is "going backwards"
            print("oh no! that's the way you came - you don't want to go back!")
            #player location is not updated = ie player is not allowed to "go backwards"

        case [1,1]:
            #player is in Room 1. The door is one step up
            player_location = new_player_location
            print("you are in the first room! It's dark, and you can feel bones crunching beneath your feet. find the door")

        case [1,2]:
            #player is going through the first door
            player_location = new_player_location
            print("you found the first doorway! keep going")

        case [1,3]:
            #player is in Room 2. the door is one step to the right
            player_location = new_player_location
            print("you're in the second room! find the door")

        case [2,3]:
            #player is going through the second door
            player_location = new_player_location
            print("brilliant, you found the door into the third room. keep going!")
        
        case [3,3]:
            #player is in the third room. the door is one step down
            player_location = new_player_location
            print("find your way to the last room, quickly!")

        case [3,2]:
            #player is going through the door into the final room
            player_location = new_player_location
            print("amazing! you found the door, keep going!")

        case [3,1]:
            #player is in the final room. the escape is one step down
            player_location = new_player_location
            print("fantastic! now find the exit and escape for good")

        case [3,0]:
            #player has found the exit
            player_location = new_player_location
            print("yay, you escaped!")
            break

        case _:
            #player is hitting a wall
            print("oops! that's a wall. it sure is dark in here!")
            #player location is not updated (ie, player does not stay pressed up against the wall unable to move)


        
